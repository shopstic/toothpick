name: CI Workflow

on: [push]

defaults:
  run:
    shell: bash

jobs:
  build-apps:
    name: Build apps
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch:
          - x86_64-linux
          - x86_64-darwin
          - aarch64-darwin    
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - name: Decrypt
        uses: ./.github/actions/decrypt-git-crypt
        with:
          gitCryptGpgKey: ${{ secrets.GIT_CRYPT_GPG_KEY }}
        timeout-minutes: 2

      - name: Setup
        uses: shopstic/tailscale-nix-builder/setup@6aac6bc8570b48c135cd78a30fb3f1bf5a4c7a31
        timeout-minutes: 1
        with:
          tailscaleAuthKey: ${{ secrets.TAILSCALE_AUTHKEY }}
          nixBuildSshKey: ${{ secrets.NIX_BUILD_SSH_KEY }}
          nixCacheS3AccessKeyId: ${{ secrets.NIX_CACHE_S3_ACCESS_KEY_ID }}
          nixCacheS3SecretAccessKey: ${{ secrets.NIX_CACHE_S3_SECRET_ACCESS_KEY }}

      - name: Build apps
        run: nix build -L -v --no-link '.#defaultPackage.${{ matrix.arch }}'

      - name: Logout
        run: sudo tailscale logout

      - name: Cache apps
        uses: shopstic/tailscale-nix-builder/cache@6aac6bc8570b48c135cd78a30fb3f1bf5a4c7a31
        with:
          nixOutput: .#defaultPackage.${{ matrix.arch }}
          nixCachePrivateKey: ${{ secrets.NIX_CACHE_PRIVATE_KEY }}

  build-images:
    name: Build images
    runs-on: ubuntu-20.04
    needs: build-apps
    strategy:
      matrix:
        arch:
          - x86_64
          - aarch64
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - name: Decrypt
        uses: ./.github/actions/decrypt-git-crypt
        with:
          gitCryptGpgKey: ${{ secrets.GIT_CRYPT_GPG_KEY }}
        timeout-minutes: 2

      - name: Setup
        uses: shopstic/tailscale-nix-builder/setup@6aac6bc8570b48c135cd78a30fb3f1bf5a4c7a31
        timeout-minutes: 1
        with:
          tailscaleAuthKey: ${{ secrets.TAILSCALE_AUTHKEY }}
          nixBuildSshKey: ${{ secrets.NIX_BUILD_SSH_KEY }}
          nixCacheS3AccessKeyId: ${{ secrets.NIX_CACHE_S3_ACCESS_KEY_ID }}
          nixCacheS3SecretAccessKey: ${{ secrets.NIX_CACHE_S3_SECRET_ACCESS_KEY }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - run: chmod +r ~/.docker/config.json

      - name: Derive branch and tag
        id: meta
        uses: ./.github/actions/derive-branch-tag

      - name: Build container images
        run: |-
          nix build -L -v '.#packages.${{ matrix.arch }}-linux.serverImage' 

      - name: Push
        env:
          GITHUB_TAG: ${{ steps.meta.outputs.tag }}
          GITHUB_SHA: ${{ github.sha }}  
        run: |-
          TAG=${GITHUB_TAG:-"${GITHUB_SHA}"}
          nix develop '.#skopeoShell' -v -c \
            skopeo --insecure-policy copy docker-archive:./result docker://docker.io/shopstic/toothpick-server:${{ matrix.arch }}-"${TAG}"

      - name: Logout
        run: sudo tailscale logout

  push-manifest:
    name: Push multi-arch manifest
    runs-on: ubuntu-20.04
    needs: build-images
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - run: chmod +r ~/.docker/config.json

      - name: Derive branch and tag
        id: meta
        uses: ./.github/actions/derive-branch-tag

      - name: Push
        env:
          GITHUB_TAG: ${{ steps.meta.outputs.tag }}
          GITHUB_SHA: ${{ github.sha }}  
        run: |-
          TAG=${GITHUB_TAG:-"${GITHUB_SHA}"}
          docker manifest create \
            shopstic/toothpick-server:"${TAG}" \
            --amend shopstic/toothpick-server:x86_64-"${TAG}" \
            --amend shopstic/toothpick-server:aarch64-"${TAG}"

          docker manifest push shopstic/toothpick-server:"${TAG}"
  
  build-helm-chart:
    name: Build Helm chart
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - name: Setup
        uses: shopstic/tailscale-nix-builder/setup@6aac6bc8570b48c135cd78a30fb3f1bf5a4c7a31
        timeout-minutes: 1
        with:
          nixCacheS3AccessKeyId: ${{ secrets.NIX_CACHE_S3_ACCESS_KEY_ID }}
          nixCacheS3SecretAccessKey: ${{ secrets.NIX_CACHE_S3_SECRET_ACCESS_KEY }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - run: chmod +r ~/.docker/config.json

      - name: Derive branch and tag
        id: meta
        uses: ./.github/actions/derive-branch-tag

      - name: Build and push Helm Chart
        # if: steps.ref_name.outputs.tag != ''
        env:
          GITHUB_TAG: ${{ steps.meta.outputs.tag }}
          GITHUB_SHA: ${{ github.sha }}
        run: |-
          export HELM_REGISTRY_CONFIG=/home/runner/.docker/config.json

          CHART_VERSION=${GITHUB_TAG:-"1.0.0-${GITHUB_SHA}"}
          APP_VERSION=${GITHUB_TAG:-"${GITHUB_SHA}"}

          nix develop '.#helmShell' -v -c ./cli.sh push_helm_chart "${CHART_VERSION}" "${APP_VERSION}" "oci://ghcr.io/shopstic/toothpick/chart"