name: CI Workflow

on: [push]

defaults:
  run:
    shell: bash

jobs:
  build-apps:
    name: Build apps
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch:
          # - x86_64-linux
          # - x86_64-darwin
          - aarch64-darwin    
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - name: Setup
        uses: shopstic/tailscale-nix-builder/setup@d59671307e2d1555ecbb89d2d510a51ca0d5688d
        timeout-minutes: 1
        with:
          tailscaleAuthKey: ${{ secrets.TAILSCALE_AUTHKEY }}
          nixBuildSshKey: ${{ secrets.NIX_BUILD_SSH_KEY }}
          nixCacheS3AccessKeyId: ${{ secrets.NIX_CACHE_S3_ACCESS_KEY_ID }}
          nixCacheS3SecretAccessKey: ${{ secrets.NIX_CACHE_S3_SECRET_ACCESS_KEY }}

      - name: Decrypt
        env:
          GIT_CRYPT_GPG_KEY: ${{ secrets.GIT_CRYPT_GPG_KEY }}
        timeout-minutes: 1
        run: |-
          cat <<EOF | nix develop '.#gitCryptShell' --builders "" -v -c bash
          printenv GIT_CRYPT_GPG_KEY | base64 -d | gpg --import
          git-crypt unlock
          EOF

      - name: Build apps
        run: nix build -L -v --no-link '.#defaultPackage.${{ matrix.arch }}'

      - name: Cache apps
        uses: shopstic/tailscale-nix-builder/cache@5d038bf4bfb3dea2f3b588efe6388796e263c6d4
        with:
          nixOutput: .#defaultPackage.${{ matrix.arch }}
          nixCachePrivateKey: ${{ secrets.NIX_CACHE_PRIVATE_KEY }}

  # build-images:
  #   name: Build images
  #   runs-on: ubuntu-20.04
  #   needs: build-apps
  #   strategy:
  #     matrix:
  #       arch:
  #         - x86_64-linux
  #         - aarch64-linux
  #   steps:
  #     - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

  #     - name: Setup
  #       uses: shopstic/tailscale-nix-builder/setup@d59671307e2d1555ecbb89d2d510a51ca0d5688d
  #       timeout-minutes: 1
  #       with:
  #         tailscaleAuthKey: ${{ secrets.TAILSCALE_AUTHKEY }}
  #         nixBuildSshKey: ${{ secrets.NIX_BUILD_SSH_KEY }}
  #         nixCacheS3AccessKeyId: ${{ secrets.NIX_CACHE_S3_ACCESS_KEY_ID }}
  #         nixCacheS3SecretAccessKey: ${{ secrets.NIX_CACHE_S3_SECRET_ACCESS_KEY }}

  #     # - name: Login to Docker Hub
  #     #   uses: docker/login-action@v1
  #     #   with:
  #     #     username: ${{ secrets.DOCKERHUB_USERNAME }}
  #     #     password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     # - run: chmod +r ~/.docker/config.json

  #     - name: Build container images
  #       run: |-
  #         nix build -L --no-link '.#packages.${{ matrix.arch }}.serverImage' 

  build-helm-chart:
    name: Build Helm chart
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - name: Setup
        uses: shopstic/tailscale-nix-builder/setup@d59671307e2d1555ecbb89d2d510a51ca0d5688d
        timeout-minutes: 1
        with:
          nixCacheS3AccessKeyId: ${{ secrets.NIX_CACHE_S3_ACCESS_KEY_ID }}
          nixCacheS3SecretAccessKey: ${{ secrets.NIX_CACHE_S3_SECRET_ACCESS_KEY }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - run: chmod +r ~/.docker/config.json

      - name: Github ref name
        id: ref_name
        run: |
          BRANCH=""
          TAG=""
          if [[ "${GITHUB_REF}" =~ ^refs/heads/.* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}
          fi

          if [[ "${GITHUB_REF}" =~ ^refs/tags/.* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
          elif [[ "${BRANCH}" == "main" ]]; then
            TAG=${GITHUB_SHA}
          fi

          echo "::set-output name=branch::${BRANCH}"
          echo "::set-output name=tag::${TAG}"

      - name: Build and push Helm Chart
        # if: steps.ref_name.outputs.tag != ''
        env:
          GITHUB_TAG: ${{ steps.ref_name.outputs.tag }}
          GITHUB_SHA: ${{ github.sha }}
        run: |-
          export HELM_REGISTRY_CONFIG=/home/runner/.docker/config.json

          CHART_VERSION=${GITHUB_TAG:-"1.0.0-${GITHUB_SHA}"}
          APP_VERSION=${GITHUB_TAG:-"${GITHUB_SHA}"}

          nix develop '.#helmShell' -v -c ./cli.sh push_helm_chart "${CHART_VERSION}" "${APP_VERSION}" "oci://ghcr.io/shopstic/toothpick/chart"
