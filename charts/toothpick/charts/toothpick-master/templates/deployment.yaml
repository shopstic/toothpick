{{ $fullName := include "toothpick-master.fullname" . }}
{{- $configHash := (include (print $.Template.BasePath "/app-config-secret.yaml") . ) | sha256sum -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "toothpick-master.fullname" . }}
  labels:
    {{- include "toothpick-master.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "toothpick-master.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        "shopstic.com/app-config-hash": {{ $configHash }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "toothpick-master.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "toothpick-master.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          ports:
            {{- range $key, $val := .Values.ports }}
            - name: {{ kebabcase $key }}
              containerPort: {{ $val.container }}
              protocol: TCP
            {{- end }}
            {{- if .Values.jmx.enabled }}
            - name: jmx
              containerPort: {{ .Values.jmx.port }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            exec:
              command:
                - bash
                - -c
                - |
                  /k8s-probe-tools/grpc_health_probe -addr=localhost:8080 -connect-timeout=250ms -rpc-timeout=250ms && \
                  /k8s-probe-tools/grpc_health_probe -addr=localhost:8081 -connect-timeout=250ms -rpc-timeout=250ms

          readinessProbe:
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            exec:
              command:
                - bash
                - -c
                - |
                  /k8s-probe-tools/grpc_health_probe -addr=localhost:8080 -connect-timeout=250ms -rpc-timeout=250ms && \
                  /k8s-probe-tools/grpc_health_probe -addr=localhost:8081 -connect-timeout=250ms -rpc-timeout=250ms
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            - /opt/docker/bin/tp-master-app
            - "-J-server"
            - "-J-XshowSettings:vm"
            - "-J-javaagent:/mnt/prometheus-jmx-exporter-agent/jmx_prometheus_javaagent.jar={{ .Values.ports.jmxMetrics.container }}:/mnt/prometheus-jmx-exporter-config/config.yaml"
            {{- if .Values.yourkitAgent.enabled }}
            - "-J-agentpath:/mnt/yourkit-agent/libyjpagent.so=port={{ .Values.yourkitAgent.port }},listen=all,logdir=/dev/stderr"
            {{- end }}
            {{- if .Values.jmx.enabled }}
            - "-Dcom.sun.management.jmxremote"
            - "-Dcom.sun.management.jmxremote.port={{ .Values.jmx.port }}"
            - "-Dcom.sun.management.jmxremote.rmi.port={{ .Values.jmx.port }}"
            - "-Dcom.sun.management.jmxremote.host=0.0.0.0"
            - "-Djava.rmi.server.hostname=127.0.0.1"
            - "-Dcom.sun.management.jmxremote.local.only=false"
            - "-Dcom.sun.management.jmxremote.ssl=false"
            - "-Dcom.sun.management.jmxremote.authenticate=false"
            {{- end }}
            - "-Dconfig.entry=/mnt/app-config/app.conf"
            - "-Dlog.level=INFO"
            {{- with .Values.args }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            {{- if .Values.yourkitAgent.enabled }}
            - name: yourkit-agent
              mountPath: /mnt/yourkit-agent
            {{- end }}
            - name: prometheus-jmx-exporter-agent
              mountPath: /mnt/prometheus-jmx-exporter-agent
            - name: prometheus-jmx-exporter-config
              mountPath: /mnt/prometheus-jmx-exporter-config
            - name: app-config
              mountPath: /mnt/app-config
            - name: fdb-cluster-file
              mountPath: /mnt/fdb/cluster.file
              subPath: cluster.file
            - mountPath: /k8s-probe-tools
              name: probe-tools
          env:
            - name: FDB_CLUSTER_FILE
              value: /mnt/fdb/cluster.file
      initContainers:
        - name: k8s-probe-tools
          image: shopstic/k8s-probe-tools:1.1.2
          volumeMounts:
            - mountPath: /k8s-probe-tools
              name: probe-tools
        {{- with .Values.yourkitAgent.image }}
        - name: yourkit-agent
          image: "{{ .repository }}:{{ .tag }}"
          imagePullPolicy: {{ .pullPolicy }}
          volumeMounts:
            - name: yourkit-agent
              mountPath: "/target"
        {{- end }}
        {{- with .Values.prometheusJmxExporterAgent.image }}
        - name: prometheus-jmx-exporter-agent
          image: "{{ .repository }}:{{ .tag }}"
          imagePullPolicy: {{ .pullPolicy }}
          volumeMounts:
            - name: prometheus-jmx-exporter-agent
              mountPath: "/target"
        {{- end }}
      volumes:
        - name: yourkit-agent
          emptyDir: {}
        - name: prometheus-jmx-exporter-agent
          emptyDir: {}
        - name: prometheus-jmx-exporter-config
          secret:
            secretName: {{ $fullName }}-prometheus-jmx-exporter-config
        - name: app-config
          secret:
            secretName: {{ $fullName }}-app-config
        - name: fdb-cluster-file
          configMap:
            name: {{ required "global.fdbConnectionStringConfigMap.name is required" .Values.global.fdbConnectionStringConfigMap.name | quote }}
            items:
              - key: {{.Values.global.fdbConnectionStringConfigMap.key | quote }}
                path: cluster.file
        - name: probe-tools
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
